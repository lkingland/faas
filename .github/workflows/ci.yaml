name: CI

on:
  push:
    branches:
      - "main"
jobs:
  test:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      - name: Test
        run:  make test
      - name: Lint
        run: make check

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      # Create a release, or update the release PR
      - uses: GoogleCloudPlatform/release-please-action@v2.5.5
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple
          bump-minor-pre-major: true

      # Standard build tasks
      - name: Build
        run:  make cross-platform

      # Upload all build artifacts whether it's a release or not
      - uses: actions/upload-artifact@v2
        with:
          name: OSX Binary
          path: func_darwin_amd64
      - uses: actions/upload-artifact@v2
        with:
          name: Linux Binary
          path: func_linux_amd64
      - uses: actions/upload-artifact@v2
        with:
          name: Windows Binary
          path: func_windows_amd64.exe

      # Build and push a latest image with each commit
      - name: Image
        run:  make image
      - name: Push Image
        env:
          USER: ${{ secrets.QUAY_USER }}
          PASS: ${{ secrets.QUAY_TOKEN }}
        run: |
          docker login -u "$USER" -p "$PASS" quay.io
          make push && make latest

      # The following steps are only executed if this is a release
      - name: Compress Binaries
        if: ${{ steps.release.outputs.release_created }}
        run: gzip func_darwin_amd64 func_linux_amd64 func_windows_amd64.exe

      # Upload all binaries
      - name: Upload Darwin Binary
        uses: actions/upload-release-asset@v1
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./func_darwin_amd64.gz
          asset_name: func_darwin_amd64.gz
          asset_content_type: application/x-gzip
      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./func_linux_amd64.gz
          asset_name: func_linux_amd64.gz
          asset_content_type: application/x-gzip
      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./func_windows_amd64.exe.gz
          asset_name: func_windows_amd64.exe.gz
          asset_content_type: application/x-gzip
